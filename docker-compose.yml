version: "3.9"
services:
  api:
    build:
      context: ./api
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DATABASE_URL=postgresql://prisma:prisma@db:5432/shopperdb
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./api:/usr/src/app
    networks:
      - shopper-network
    command: >
      sh -c "
      echo -e 'GOOGLE_API_KEY=${GOOGLE_API_KEY}\nDATABASE_URL=postgresql://prisma:prisma@db:5432/shopperdb' > /usr/src/app/.env &&
      npx prisma generate &&
      npx prisma migrate deploy &&
      npm run start:prod
      "

  front:
    build:
      context: ./front
    ports:
      - "80:80"
    env_file:
      - .env
    environment:
      - REACT_APP_GOOGLE_API_KEY=${REACT_APP_GOOGLE_API_KEY}
      - REACT_APP_API_ROUTE=${REACT_APP_API_ROUTE}
    volumes:
      - ./front:/usr/src/app
    networks:
      - shopper-network
    command: >
      sh -c "echo -e 'REACT_APP_GOOGLE_API_KEY=${REACT_APP_GOOGLE_API_KEY}\nREACT_APP_API_ROUTE=${REACT_APP_API_ROUTE}' > /usr/src/app/.env && serve -s build"

  db:
    image: postgres:15
    container_name: shopper-db
    restart: always
    environment:
      POSTGRES_USER: prisma
      POSTGRES_PASSWORD: prisma
      POSTGRES_DB: shopperdb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shopper-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prisma"]
      interval: 10s
      retries: 5

networks:
  shopper-network:
    driver: bridge

volumes:
  postgres_data:
